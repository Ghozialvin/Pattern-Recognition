# -*- coding: utf-8 -*-
"""Tugas2_Pengpol_Ghozi Alvin Karim_121450123.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1orG-q6U7EOFs92VcuHNWDqbOI51RCc88

# Tugas Pengenalan Pola
---
> Nama : Ghozi Alvin Karim \
> Nim : 121450123 \
> Kelas : Pengenalan Pola (RA)
---

## Template Matching
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt

# Fungsi untuk memutar gambar
def rotate_image(image, angle):
    (h, w) = image.shape[:2]
    center = (w // 2, h // 2)

    # Mendapatkan matriks rotasi
    M = cv2.getRotationMatrix2D(center, angle, 1.0)

    # Melakukan rotasi gambar
    rotated = cv2.warpAffine(image, M, (w, h))
    return rotated

# Fungsi untuk melakukan template matching dan menggambar kotak hasil
def template_matching_with_rotation(image, template, angles):
    h, w = template.shape[:2]

    for angle in angles:
        # Memutar template
        rotated_template = rotate_image(template, angle)

        # Melakukan template matching
        result = cv2.matchTemplate(image, rotated_template, cv2.TM_CCOEFF_NORMED)

        # Mencari nilai maksimum korelasi dan lokasinya
        min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)

        # Menandai lokasi dengan kotak
        top_left = max_loc
        bottom_right = (top_left[0] + w, top_left[1] + h)
        matched_image = image.copy()
        cv2.rectangle(matched_image, top_left, bottom_right, 255, 2)

        # Menampilkan hasil
        plt.subplot(1, len(angles), angles.index(angle)+1)
        plt.imshow(matched_image, cmap='gray')
        plt.title(f'Angle: {angle}Â°\nMax Correlation: {max_val:.2f}')
        plt.axis('off')

# Memuat gambar dan template
image = cv2.imread('/content/permainanbolabaskket.jpeg', 0)
template = cv2.imread('/content/basket.jpeg', 0)

# Daftar sudut rotasi
angles = [0, 15, 30, 45]

# Menjalankan fungsi
plt.figure(figsize=(15, 5))
template_matching_with_rotation(image, template, angles)
plt.show()

import cv2
import numpy as np
import matplotlib.pyplot as plt

def rotate_image(image, angle):
    height, width = image.shape[:2]
    center = (width / 2, height / 2)
    rotation_matrix = cv2.getRotationMatrix2D(center, angle, 1.0)
    rotated_image = cv2.warpAffine(image, rotation_matrix, (width, height))
    return rotated_image

def template_matching_with_rotation(image, template, angles):
    best_match = None
    best_correlation = -np.inf

    for angle in angles:
        rotated_template = rotate_image(template, angle)
        result = cv2.matchTemplate(image, rotated_template, cv2.TM_CCOEFF_NORMED)
        min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)

        if max_val > best_correlation:
            best_correlation = max_val
            best_match = (max_loc, rotated_template.shape[:2], angle)

    return best_match, best_correlation

# Memuat gambar dan template
image = cv2.imread('/content/permainanbolabaskket.jpeg', 0)
template = cv2.imread('/content/basket.jpeg', 0)

if image is None or template is None:
    raise ValueError("Gambar atau template tidak ditemukan. Periksa kembali path file.")

# Melakukan template matching dengan rotasi
angles = [0, 15, 30, 45]
best_match, best_correlation = template_matching_with_rotation(image, template, angles)

if best_match is not None:
    # Menggambar kotak pada lokasi yang cocok
    result_image = cv2.cvtColor(image, cv2.COLOR_GRAY2BGR)
    top_left, (h, w), angle = best_match
    bottom_right = (top_left[0] + w, top_left[1] + h)
    cv2.rectangle(result_image, top_left, bottom_right, (0, 255, 0), 2)

    # Menampilkan hasil menggunakan Matplotlib
    plt.imshow(cv2.cvtColor(result_image, cv2.COLOR_BGR2RGB))
    plt.title(f"Best Match - Angle: {angle} degrees")
    plt.show()

    print(f"Korelasi maksimum: {best_correlation}")
    print(f"Sudut rotasi terbaik: {angle} derajat")
else:
    print("Tidak ditemukan kecocokan template.")